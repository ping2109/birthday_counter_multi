name: bday counter

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Configuration
        uses: falti/dotenv-action@v0.2.5
        id: config
        with:
          path: config.env
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.5'
      - name: Install python requirements
        run: |
          pip install python-telegram-bot pyrogram tgcrypto
      - name: Check date
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.date }}" "DATE secret"
          required "${{ steps.config.outputs.date1 }}" "DATE1 secret"
          required "${{ steps.config.outputs.date2 }}" "DATE2 secret"
          required "${{ steps.config.outputs.date3 }}" "DATE3 secret"
          required "${{ steps.config.outputs.date4 }}" "DATE4 secret"
          required "${{ steps.config.outputs.date5 }}" "DATE5 secret"
          required "${{ steps.config.outputs.date6 }}" "DATE6 secret"
          required "${{ steps.config.outputs.date7 }}" "DATE7 secret"
          required "${{ steps.config.outputs.date8 }}" "DATE8 secret"
      - name: Check month
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.month }}" "MONTH secret"
          required "${{ steps.config.outputs.month1 }}" "MONTH1 secret"
          required "${{ steps.config.outputs.month2 }}" "MONTH2 secret"
          required "${{ steps.config.outputs.month3 }}" "MONTH3 secret"
          required "${{ steps.config.outputs.month4 }}" "MONTH4 secret"
          required "${{ steps.config.outputs.month5 }}" "MONTH5 secret"
          required "${{ steps.config.outputs.month6 }}" "MONTH6 secret"
          required "${{ steps.config.outputs.month7 }}" "MONTH7 secret"
          required "${{ steps.config.outputs.month8 }}" "MONTH8 secret"
      - name: Check year
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.year }}" "YEAR config"
          required "${{ steps.config.outputs.year1 }}" "YEAR1 config"
          required "${{ steps.config.outputs.year2 }}" "YEAR2 config"
          required "${{ steps.config.outputs.year3 }}" "YEAR3 config"
          required "${{ steps.config.outputs.year4 }}" "YEAR4 config"
          required "${{ steps.config.outputs.year5 }}" "YEAR5 config"
          required "${{ steps.config.outputs.year6 }}" "YEAR6 config"
          required "${{ steps.config.outputs.year7 }}" "YEAR7 config"
          required "${{ steps.config.outputs.year8 }}" "YEAR8 config"
      - name: Check username
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.username }}" "USERNAME config"
          required "${{ steps.config.outputs.username1 }}" "USERNAME1 config"
          required "${{ steps.config.outputs.username2 }}" "USERNAME2 config"
          required "${{ steps.config.outputs.username3 }}" "USERNAME3 config"
          required "${{ steps.config.outputs.username4 }}" "USERNAME4 config"
          required "${{ steps.config.outputs.username5 }}" "USERNAME5 config"
          required "${{ steps.config.outputs.username6 }}" "USERNAME6 config"
          required "${{ steps.config.outputs.username7 }}" "USERNAME7 config"
          required "${{ steps.config.outputs.username8 }}" "USERNAME8 config"
      - name: Check envs
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.tg_id }}" "TG_ID config"
          required "${{ secrets.bot_token }}" "BOT_TOKEN config"
      - name: initialization
        continue-on-error: true
        run: |
          git config --global user.name ${{ secrets.gh_name }}
          git config --global user.email ${{ secrets.gh_mail }}
          git config --global credential.helper store
          echo "https://${{ secrets.gh_name }}:${{ secrets.gh_token }}@github.com" > ~/.git-credentials
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #0
              DATE: "${{ steps.config.outputs.date }}"
              MONTH: "${{ steps.config.outputs.month }}"
              YEAR: "${{ steps.config.outputs.year }}"
              USERNAME: "${{ steps.config.outputs.username }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python sticker.py
          python 0/basics.py
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #1
              DATE1: "${{ steps.config.outputs.date1 }}"
              MONTH1: "${{ steps.config.outputs.month1 }}"
              YEAR1: "${{ steps.config.outputs.year1 }}"
              USERNAME1: "${{ steps.config.outputs.username1 }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python 1/basics.py
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #2
              DATE2: "${{ steps.config.outputs.date2 }}"
              MONTH2: "${{ steps.config.outputs.month2 }}"
              YEAR2: "${{ steps.config.outputs.year2 }}"
              USERNAME2: "${{ steps.config.outputs.username2 }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python 2/basics.py
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #3
              DATE3: "${{ steps.config.outputs.date3 }}"
              MONTH3: "${{ steps.config.outputs.month3 }}"
              YEAR3: "${{ steps.config.outputs.year3 }}"
              USERNAME3: "${{ steps.config.outputs.username3 }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python 3/basics.py
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #4
              DATE4: "${{ steps.config.outputs.date4 }}"
              MONTH4: "${{ steps.config.outputs.month4 }}"
              YEAR4: "${{ steps.config.outputs.year4 }}"
              USERNAME4: "${{ steps.config.outputs.username4 }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python 4/basics.py
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #5
              DATE5: "${{ steps.config.outputs.date5 }}"
              MONTH5: "${{ steps.config.outputs.month5 }}"
              YEAR5: "${{ steps.config.outputs.year5 }}"
              USERNAME5: "${{ steps.config.outputs.username5 }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python 5/basics.py
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #6
              DATE6: "${{ steps.config.outputs.date6 }}"
              MONTH6: "${{ steps.config.outputs.month6 }}"
              YEAR6: "${{ steps.config.outputs.year6 }}"
              USERNAME6: "${{ steps.config.outputs.username6 }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python 6/basics.py
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #7
              DATE7: "${{ steps.config.outputs.date7 }}"
              MONTH7: "${{ steps.config.outputs.month7 }}"
              YEAR7: "${{ steps.config.outputs.year7 }}"
              USERNAME7: "${{ steps.config.outputs.username7 }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python 7/basics.py
      - name: Calculation + Telegram notify
        continue-on-error: true
        env:
              #7
              DATE8: "${{ steps.config.outputs.date8 }}"
              MONTH8: "${{ steps.config.outputs.month8 }}"
              YEAR8: "${{ steps.config.outputs.year8 }}"
              USERNAME8: "${{ steps.config.outputs.username8 }}"
              #
              TG_ID: "${{ steps.config.outputs.tg_id }}"
              TOKEN: "${{ secrets.BOT_TOKEN }}"
        run: |
          python 8/basics.py
      - name: Loop
        run: |
              sleep 5h
              git clone https://github.com/ping2109/birthday_counter_multi reloop
              cd reloop || exit 1
              echo $(date -u +%T%P) >> loop.txt
              git add loop.txt
              git commit -m "Loop $(date -u +%D-%T%P)"
              git push -q https://${{ secrets.GH_TOKEN }}@github.com/ping2109/birthday_counter_multi HEAD:main
